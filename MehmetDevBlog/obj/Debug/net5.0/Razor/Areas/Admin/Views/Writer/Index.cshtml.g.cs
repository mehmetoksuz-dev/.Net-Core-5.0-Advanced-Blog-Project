#pragma checksum "C:\Users\mehme\source\repos\MehmetDevBlog\.Net-Core-5.0-Advanced-Blog-Project\MehmetDevBlog\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ab6348d222e4ded85fba8ec192c777388f36bbdb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab6348d222e4ded85fba8ec192c777388f36bbdb", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\mehme\source\repos\MehmetDevBlog\.Net-Core-5.0-Advanced-Blog-Project\MehmetDevBlog\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Writer Ajax Operations</h1>
<br />
<button type=""button"" id=""btnGetList"" class=""btn btn-outline-primary"">Writer List</button>
<button type=""button"" id=""btnGetById"" class=""btn btn-outline-success"">Get Writer</button>
<button type=""button"" id=""btnAddWriter"" class=""btn btn-outline-info"">Add Writer</button>
<button type=""button"" id=""btnDelWriter"" class=""btn btn-outline-danger"">Delete Writer</button>

<br />
<br />
<div id=""writerList"">
    writers here...
</div>
<br />
<div id=""getWriter"">
    here will come only one writer
</div>
<div>
    <input type=""text"" id=""writerid"" placeholder=""Enter Writer Id"" class=""form-control"" />
</div>
<br />
<div>
    <h3>Add Writer</h3>
    <input type=""text"" class=""form-control"" id=""txtWriterMail"" placeholder=""Writer Mail"" />
    <input type=""text"" class=""form-control"" id=""txtWriterName"" placeholder=""Writer Name"" />
    <input type=""text"" class=""form-control"" id=""txtWriterPass"" placeholder=""Writer Password"" />
    <br />
</div>
<br />
<div>
    ");
            WriteLiteral("<input type=\"text\" class=\"form-control\" id=\"txtDelId\" placeholder=\"Writer Id For Delete\" />\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script>
    $(""#btnGetList"").click(function() {
          $.ajax({
              contentType: ""application/json"",
              dataType: ""json"",
              type: ""Get"",
              url: ""/Admin/Writer/WriterList/"",
              success: function(func){
                  let w = jQuery.parseJSON(func);
                  console.log(w);
                  let tablehtml = ""<table class=table table-bordered><tr><th> Writer Id </th> <th> Writer Name </th></tr>"";
                  $.each(w,(index, value) => {
                      tablehtml+=`<tr><td>${value.WriterID}</td> <td>${value.WriterName}</td> </tr>`
                  });
                  tablehtml+=""</table>"";
                  $(""#getWriter"").html(tablehtml);
              }
          });
    });

    $(""#btnGetById"").click(x => {
        let id = $(""#writerid"").val();
        $.ajax({
            contentType: ""application/json"",
            dataType: ""json"",
            type: ""get"",
            url: ""/Admin/Writer/GetW");
                WriteLiteral(@"riterByID/"",
            data: {writerid:id}, //yukaridaki degisken bizim controllerdaki degiskenle iliskili
            success: function(func){
                let w = jQuery.parseJSON(func);
                console.log(w);

                let tablehtml = ""<table class=table table-bordered><tr><th> Writer Id </th> <th> Writer Name </th></tr>"";
                $.each(w,(index, value) => {
                    tablehtml+=`<tr><td>${value.WriterID}</td> <td>${value.WriterName}</td> </tr>`
                });
                tablehtml+=""</table>"";
                $(""#writerList"").html(tablehtml);
            }
        });
        console.log(id);
    });

    $(""#btnAddWriter"").click(function(){
        let writer = {
            //Id: $(""#txtWriterId"").val(),
            Mail : $(""#txtWriterName"").val(),
            Name: $(""#txtWriterName"").val(),
            Password: $(""#txtWriterPass"").val()
        };

        $.ajax({
            type:""post"",
            url:""/Admin/Writer/AddW");
                WriteLiteral(@"riter"",
            data: writer,
            success: function(func){
                let result = jQuery.parseJSON(func);
                alert(""Writer Added Successfully."");
            }
        });
    });

    $(""#btnDelWriter"").click(x=>{
        let id = $(""#txtDelId"").val();

        $.ajax({
            url:""/Admin/Writer/DeleteWriter/""+id,
            type: ""post"",
            dataType: ""json"",
            success:function(func){
                alert(""Writer Deleted Successfully."");
            }
        });
    });
</script>
 ");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
